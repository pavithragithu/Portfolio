{"ast":null,"code":"import _classCallCheck from \"C:/Users/HP/3D Objects/portfolio/my/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"C:/Users/HP/3D Objects/portfolio/my/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport { getRandom } from \"tsparticles-engine\";\nimport { updateSize } from \"./Utils\";\nexport var SizeUpdater = /*#__PURE__*/function () {\n  function SizeUpdater() {\n    _classCallCheck(this, SizeUpdater);\n  }\n  _createClass(SizeUpdater, [{\n    key: \"init\",\n    value: function init(particle) {\n      var container = particle.container,\n        sizeOptions = particle.options.size,\n        sizeAnimation = sizeOptions.animation;\n      if (sizeAnimation.enable) {\n        var _particle$retina$size;\n        particle.size.velocity = ((_particle$retina$size = particle.retina.sizeAnimationSpeed) !== null && _particle$retina$size !== void 0 ? _particle$retina$size : container.retina.sizeAnimationSpeed) / 100 * container.retina.reduceFactor;\n        if (!sizeAnimation.sync) {\n          particle.size.velocity *= getRandom();\n        }\n      }\n    }\n  }, {\n    key: \"isEnabled\",\n    value: function isEnabled(particle) {\n      var _particle$size$maxLoo, _particle$size$maxLoo2, _particle$size$loops, _particle$size$maxLoo3;\n      return !particle.destroyed && !particle.spawning && particle.size.enable && (((_particle$size$maxLoo = particle.size.maxLoops) !== null && _particle$size$maxLoo !== void 0 ? _particle$size$maxLoo : 0) <= 0 || ((_particle$size$maxLoo2 = particle.size.maxLoops) !== null && _particle$size$maxLoo2 !== void 0 ? _particle$size$maxLoo2 : 0) > 0 && ((_particle$size$loops = particle.size.loops) !== null && _particle$size$loops !== void 0 ? _particle$size$loops : 0) < ((_particle$size$maxLoo3 = particle.size.maxLoops) !== null && _particle$size$maxLoo3 !== void 0 ? _particle$size$maxLoo3 : 0));\n    }\n  }, {\n    key: \"reset\",\n    value: function reset(particle) {\n      particle.size.loops = 0;\n    }\n  }, {\n    key: \"update\",\n    value: function update(particle, delta) {\n      if (!this.isEnabled(particle)) {\n        return;\n      }\n      updateSize(particle, delta);\n    }\n  }]);\n  return SizeUpdater;\n}();","map":{"version":3,"names":["getRandom","updateSize","SizeUpdater","_classCallCheck","_createClass","key","value","init","particle","container","sizeOptions","options","size","sizeAnimation","animation","enable","_particle$retina$size","velocity","retina","sizeAnimationSpeed","reduceFactor","sync","isEnabled","_particle$size$maxLoo","_particle$size$maxLoo2","_particle$size$loops","_particle$size$maxLoo3","destroyed","spawning","maxLoops","loops","reset","update","delta"],"sources":["C:/Users/HP/3D Objects/portfolio/my/node_modules/tsparticles-updater-size/esm/SizeUpdater.js"],"sourcesContent":["import { getRandom } from \"tsparticles-engine\";\nimport { updateSize } from \"./Utils\";\nexport class SizeUpdater {\n    init(particle) {\n        const container = particle.container, sizeOptions = particle.options.size, sizeAnimation = sizeOptions.animation;\n        if (sizeAnimation.enable) {\n            particle.size.velocity =\n                ((particle.retina.sizeAnimationSpeed ?? container.retina.sizeAnimationSpeed) / 100) *\n                    container.retina.reduceFactor;\n            if (!sizeAnimation.sync) {\n                particle.size.velocity *= getRandom();\n            }\n        }\n    }\n    isEnabled(particle) {\n        return (!particle.destroyed &&\n            !particle.spawning &&\n            particle.size.enable &&\n            ((particle.size.maxLoops ?? 0) <= 0 ||\n                ((particle.size.maxLoops ?? 0) > 0 && (particle.size.loops ?? 0) < (particle.size.maxLoops ?? 0))));\n    }\n    reset(particle) {\n        particle.size.loops = 0;\n    }\n    update(particle, delta) {\n        if (!this.isEnabled(particle)) {\n            return;\n        }\n        updateSize(particle, delta);\n    }\n}\n"],"mappings":";;AAAA,SAASA,SAAS,QAAQ,oBAAoB;AAC9C,SAASC,UAAU,QAAQ,SAAS;AACpC,WAAaC,WAAW;EAAA,SAAAA,YAAA;IAAAC,eAAA,OAAAD,WAAA;EAAA;EAAAE,YAAA,CAAAF,WAAA;IAAAG,GAAA;IAAAC,KAAA,EACpB,SAAAC,KAAKC,QAAQ,EAAE;MACX,IAAMC,SAAS,GAAGD,QAAQ,CAACC,SAAS;QAAEC,WAAW,GAAGF,QAAQ,CAACG,OAAO,CAACC,IAAI;QAAEC,aAAa,GAAGH,WAAW,CAACI,SAAS;MAChH,IAAID,aAAa,CAACE,MAAM,EAAE;QAAA,IAAAC,qBAAA;QACtBR,QAAQ,CAACI,IAAI,CAACK,QAAQ,GACjB,EAAAD,qBAAA,GAACR,QAAQ,CAACU,MAAM,CAACC,kBAAkB,cAAAH,qBAAA,cAAAA,qBAAA,GAAIP,SAAS,CAACS,MAAM,CAACC,kBAAkB,IAAI,GAAG,GAC9EV,SAAS,CAACS,MAAM,CAACE,YAAY;QACrC,IAAI,CAACP,aAAa,CAACQ,IAAI,EAAE;UACrBb,QAAQ,CAACI,IAAI,CAACK,QAAQ,IAAIjB,SAAS,CAAC,CAAC;QACzC;MACJ;IACJ;EAAC;IAAAK,GAAA;IAAAC,KAAA,EACD,SAAAgB,UAAUd,QAAQ,EAAE;MAAA,IAAAe,qBAAA,EAAAC,sBAAA,EAAAC,oBAAA,EAAAC,sBAAA;MAChB,OAAQ,CAAClB,QAAQ,CAACmB,SAAS,IACvB,CAACnB,QAAQ,CAACoB,QAAQ,IAClBpB,QAAQ,CAACI,IAAI,CAACG,MAAM,KACnB,EAAAQ,qBAAA,GAACf,QAAQ,CAACI,IAAI,CAACiB,QAAQ,cAAAN,qBAAA,cAAAA,qBAAA,GAAI,CAAC,KAAK,CAAC,IAC9B,EAAAC,sBAAA,GAAChB,QAAQ,CAACI,IAAI,CAACiB,QAAQ,cAAAL,sBAAA,cAAAA,sBAAA,GAAI,CAAC,IAAI,CAAC,IAAI,EAAAC,oBAAA,GAACjB,QAAQ,CAACI,IAAI,CAACkB,KAAK,cAAAL,oBAAA,cAAAA,oBAAA,GAAI,CAAC,MAAAC,sBAAA,GAAKlB,QAAQ,CAACI,IAAI,CAACiB,QAAQ,cAAAH,sBAAA,cAAAA,sBAAA,GAAI,CAAC,CAAE,CAAC;IAC9G;EAAC;IAAArB,GAAA;IAAAC,KAAA,EACD,SAAAyB,MAAMvB,QAAQ,EAAE;MACZA,QAAQ,CAACI,IAAI,CAACkB,KAAK,GAAG,CAAC;IAC3B;EAAC;IAAAzB,GAAA;IAAAC,KAAA,EACD,SAAA0B,OAAOxB,QAAQ,EAAEyB,KAAK,EAAE;MACpB,IAAI,CAAC,IAAI,CAACX,SAAS,CAACd,QAAQ,CAAC,EAAE;QAC3B;MACJ;MACAP,UAAU,CAACO,QAAQ,EAAEyB,KAAK,CAAC;IAC/B;EAAC;EAAA,OAAA/B,WAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}