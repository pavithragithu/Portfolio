{"ast":null,"code":"import _regeneratorRuntime from \"C:/Users/HP/3D Objects/portfolio/my/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _createForOfIteratorHelper from \"C:/Users/HP/3D Objects/portfolio/my/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\nimport _asyncToGenerator from \"C:/Users/HP/3D Objects/portfolio/my/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _classCallCheck from \"C:/Users/HP/3D Objects/portfolio/my/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"C:/Users/HP/3D Objects/portfolio/my/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _inherits from \"C:/Users/HP/3D Objects/portfolio/my/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"C:/Users/HP/3D Objects/portfolio/my/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport { ParticlesInteractorBase, getDistance } from \"tsparticles-engine\";\nimport { resolveCollision } from \"./ResolveCollision\";\nexport var Collider = /*#__PURE__*/function (_ParticlesInteractorB) {\n  _inherits(Collider, _ParticlesInteractorB);\n  var _super = _createSuper(Collider);\n  function Collider(container) {\n    _classCallCheck(this, Collider);\n    return _super.call(this, container);\n  }\n  _createClass(Collider, [{\n    key: \"clear\",\n    value: function clear() {}\n  }, {\n    key: \"init\",\n    value: function init() {}\n  }, {\n    key: \"interact\",\n    value: function () {\n      var _interact = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(p1, delta) {\n        var container, pos1, radius1, query, _iterator, _step, p2, pos2, radius2, dist, distP;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              if (!(p1.destroyed || p1.spawning)) {\n                _context.next = 2;\n                break;\n              }\n              return _context.abrupt(\"return\");\n            case 2:\n              container = this.container, pos1 = p1.getPosition(), radius1 = p1.getRadius(), query = container.particles.quadTree.queryCircle(pos1, radius1 * 2);\n              _iterator = _createForOfIteratorHelper(query);\n              _context.prev = 4;\n              _iterator.s();\n            case 6:\n              if ((_step = _iterator.n()).done) {\n                _context.next = 19;\n                break;\n              }\n              p2 = _step.value;\n              if (!(p1 === p2 || !p2.options.collisions.enable || p1.options.collisions.mode !== p2.options.collisions.mode || p2.destroyed || p2.spawning)) {\n                _context.next = 10;\n                break;\n              }\n              return _context.abrupt(\"continue\", 17);\n            case 10:\n              pos2 = p2.getPosition(), radius2 = p2.getRadius();\n              if (!(Math.abs(Math.round(pos1.z) - Math.round(pos2.z)) > radius1 + radius2)) {\n                _context.next = 13;\n                break;\n              }\n              return _context.abrupt(\"continue\", 17);\n            case 13:\n              dist = getDistance(pos1, pos2), distP = radius1 + radius2;\n              if (!(dist > distP)) {\n                _context.next = 16;\n                break;\n              }\n              return _context.abrupt(\"continue\", 17);\n            case 16:\n              resolveCollision(p1, p2, delta, container.retina.pixelRatio);\n            case 17:\n              _context.next = 6;\n              break;\n            case 19:\n              _context.next = 24;\n              break;\n            case 21:\n              _context.prev = 21;\n              _context.t0 = _context[\"catch\"](4);\n              _iterator.e(_context.t0);\n            case 24:\n              _context.prev = 24;\n              _iterator.f();\n              return _context.finish(24);\n            case 27:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, this, [[4, 21, 24, 27]]);\n      }));\n      function interact(_x, _x2) {\n        return _interact.apply(this, arguments);\n      }\n      return interact;\n    }()\n  }, {\n    key: \"isEnabled\",\n    value: function isEnabled(particle) {\n      return particle.options.collisions.enable;\n    }\n  }, {\n    key: \"reset\",\n    value: function reset() {}\n  }]);\n  return Collider;\n}(ParticlesInteractorBase);","map":{"version":3,"names":["ParticlesInteractorBase","getDistance","resolveCollision","Collider","_ParticlesInteractorB","_inherits","_super","_createSuper","container","_classCallCheck","call","_createClass","key","value","clear","init","_interact","_asyncToGenerator","_regeneratorRuntime","mark","_callee","p1","delta","pos1","radius1","query","_iterator","_step","p2","pos2","radius2","dist","distP","wrap","_callee$","_context","prev","next","destroyed","spawning","abrupt","getPosition","getRadius","particles","quadTree","queryCircle","_createForOfIteratorHelper","s","n","done","options","collisions","enable","mode","Math","abs","round","z","retina","pixelRatio","t0","e","f","finish","stop","interact","_x","_x2","apply","arguments","isEnabled","particle","reset"],"sources":["C:/Users/HP/3D Objects/portfolio/my/node_modules/tsparticles-interaction-particles-collisions/esm/Collider.js"],"sourcesContent":["import { ParticlesInteractorBase, getDistance } from \"tsparticles-engine\";\nimport { resolveCollision } from \"./ResolveCollision\";\nexport class Collider extends ParticlesInteractorBase {\n    constructor(container) {\n        super(container);\n    }\n    clear() {\n    }\n    init() {\n    }\n    async interact(p1, delta) {\n        if (p1.destroyed || p1.spawning) {\n            return;\n        }\n        const container = this.container, pos1 = p1.getPosition(), radius1 = p1.getRadius(), query = container.particles.quadTree.queryCircle(pos1, radius1 * 2);\n        for (const p2 of query) {\n            if (p1 === p2 ||\n                !p2.options.collisions.enable ||\n                p1.options.collisions.mode !== p2.options.collisions.mode ||\n                p2.destroyed ||\n                p2.spawning) {\n                continue;\n            }\n            const pos2 = p2.getPosition(), radius2 = p2.getRadius();\n            if (Math.abs(Math.round(pos1.z) - Math.round(pos2.z)) > radius1 + radius2) {\n                continue;\n            }\n            const dist = getDistance(pos1, pos2), distP = radius1 + radius2;\n            if (dist > distP) {\n                continue;\n            }\n            resolveCollision(p1, p2, delta, container.retina.pixelRatio);\n        }\n    }\n    isEnabled(particle) {\n        return particle.options.collisions.enable;\n    }\n    reset() {\n    }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}