{"ast":null,"code":"import _objectSpread from \"C:/Users/HP/3D Objects/portfolio/my/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _classCallCheck from \"C:/Users/HP/3D Objects/portfolio/my/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"C:/Users/HP/3D Objects/portfolio/my/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _get from \"C:/Users/HP/3D Objects/portfolio/my/node_modules/@babel/runtime/helpers/esm/get.js\";\nimport _getPrototypeOf from \"C:/Users/HP/3D Objects/portfolio/my/node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js\";\nimport _inherits from \"C:/Users/HP/3D Objects/portfolio/my/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"C:/Users/HP/3D Objects/portfolio/my/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport { Circle, Rectangle } from \"tsparticles-engine\";\nexport var CircleWarp = /*#__PURE__*/function (_Circle) {\n  _inherits(CircleWarp, _Circle);\n  var _super = _createSuper(CircleWarp);\n  function CircleWarp(x, y, radius, canvasSize) {\n    var _this;\n    _classCallCheck(this, CircleWarp);\n    _this = _super.call(this, x, y, radius);\n    _this.canvasSize = canvasSize;\n    _this.canvasSize = _objectSpread({}, canvasSize);\n    return _this;\n  }\n  _createClass(CircleWarp, [{\n    key: \"contains\",\n    value: function contains(point) {\n      var _this$canvasSize = this.canvasSize,\n        width = _this$canvasSize.width,\n        height = _this$canvasSize.height;\n      var x = point.x,\n        y = point.y;\n      return _get(_getPrototypeOf(CircleWarp.prototype), \"contains\", this).call(this, point) || _get(_getPrototypeOf(CircleWarp.prototype), \"contains\", this).call(this, {\n        x: x - width,\n        y: y\n      }) || _get(_getPrototypeOf(CircleWarp.prototype), \"contains\", this).call(this, {\n        x: x - width,\n        y: y - height\n      }) || _get(_getPrototypeOf(CircleWarp.prototype), \"contains\", this).call(this, {\n        x: x,\n        y: y - height\n      });\n    }\n  }, {\n    key: \"intersects\",\n    value: function intersects(range) {\n      if (_get(_getPrototypeOf(CircleWarp.prototype), \"intersects\", this).call(this, range)) {\n        return true;\n      }\n      var rect = range,\n        circle = range,\n        newPos = {\n          x: range.position.x - this.canvasSize.width,\n          y: range.position.y - this.canvasSize.height\n        };\n      if (circle.radius !== undefined) {\n        var biggerCircle = new Circle(newPos.x, newPos.y, circle.radius * 2);\n        return _get(_getPrototypeOf(CircleWarp.prototype), \"intersects\", this).call(this, biggerCircle);\n      } else if (rect.size !== undefined) {\n        var rectSW = new Rectangle(newPos.x, newPos.y, rect.size.width * 2, rect.size.height * 2);\n        return _get(_getPrototypeOf(CircleWarp.prototype), \"intersects\", this).call(this, rectSW);\n      }\n      return false;\n    }\n  }]);\n  return CircleWarp;\n}(Circle);","map":{"version":3,"names":["Circle","Rectangle","CircleWarp","_Circle","_inherits","_super","_createSuper","x","y","radius","canvasSize","_this","_classCallCheck","call","_objectSpread","_createClass","key","value","contains","point","_this$canvasSize","width","height","_get","_getPrototypeOf","prototype","intersects","range","rect","circle","newPos","position","undefined","biggerCircle","size","rectSW"],"sources":["C:/Users/HP/3D Objects/portfolio/my/node_modules/tsparticles-interaction-particles-links/esm/CircleWarp.js"],"sourcesContent":["import { Circle, Rectangle } from \"tsparticles-engine\";\nexport class CircleWarp extends Circle {\n    constructor(x, y, radius, canvasSize) {\n        super(x, y, radius);\n        this.canvasSize = canvasSize;\n        this.canvasSize = { ...canvasSize };\n    }\n    contains(point) {\n        const { width, height } = this.canvasSize;\n        const { x, y } = point;\n        return (super.contains(point) ||\n            super.contains({ x: x - width, y }) ||\n            super.contains({ x: x - width, y: y - height }) ||\n            super.contains({ x, y: y - height }));\n    }\n    intersects(range) {\n        if (super.intersects(range)) {\n            return true;\n        }\n        const rect = range, circle = range, newPos = {\n            x: range.position.x - this.canvasSize.width,\n            y: range.position.y - this.canvasSize.height,\n        };\n        if (circle.radius !== undefined) {\n            const biggerCircle = new Circle(newPos.x, newPos.y, circle.radius * 2);\n            return super.intersects(biggerCircle);\n        }\n        else if (rect.size !== undefined) {\n            const rectSW = new Rectangle(newPos.x, newPos.y, rect.size.width * 2, rect.size.height * 2);\n            return super.intersects(rectSW);\n        }\n        return false;\n    }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}