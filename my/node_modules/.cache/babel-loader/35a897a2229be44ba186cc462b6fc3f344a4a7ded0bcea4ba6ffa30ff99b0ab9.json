{"ast":null,"code":"import _slicedToArray from \"C:/Users/HP/3D Objects/portfolio/my/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport _regeneratorRuntime from \"C:/Users/HP/3D Objects/portfolio/my/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"C:/Users/HP/3D Objects/portfolio/my/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _objectSpread from \"C:/Users/HP/3D Objects/portfolio/my/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _createForOfIteratorHelper from \"C:/Users/HP/3D Objects/portfolio/my/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\nimport _classCallCheck from \"C:/Users/HP/3D Objects/portfolio/my/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"C:/Users/HP/3D Objects/portfolio/my/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport { clear as _clear, drawParticle as _drawParticle, drawParticlePlugin as _drawParticlePlugin, drawPlugin as _drawPlugin, paintBase, paintImage } from \"../Utils/CanvasUtils\";\nimport { deepExtend, isSsr } from \"../Utils/Utils\";\nimport { getStyleFromHsl, getStyleFromRgb, rangeColorToHsl, rangeColorToRgb } from \"../Utils/ColorUtils\";\nimport { generatedAttribute } from \"./Utils/Constants\";\nfunction setTransformValue(factor, newFactor, key) {\n  var newValue = newFactor[key];\n  if (newValue !== undefined) {\n    var _factor$key;\n    factor[key] = ((_factor$key = factor[key]) !== null && _factor$key !== void 0 ? _factor$key : 1) * newValue;\n  }\n}\nexport var Canvas = /*#__PURE__*/function () {\n  function Canvas(container) {\n    var _this = this;\n    _classCallCheck(this, Canvas);\n    this.container = container;\n    this._applyPostDrawUpdaters = function (particle) {\n      var _iterator = _createForOfIteratorHelper(_this._postDrawUpdaters),\n        _step;\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var updater = _step.value;\n          updater.afterDraw && updater.afterDraw(particle);\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n    };\n    this._applyPreDrawUpdaters = function (ctx, particle, radius, zOpacity, colorStyles, transform) {\n      var _iterator2 = _createForOfIteratorHelper(_this._preDrawUpdaters),\n        _step2;\n      try {\n        for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n          var updater = _step2.value;\n          if (updater.getColorStyles) {\n            var _updater$getColorStyl = updater.getColorStyles(particle, ctx, radius, zOpacity),\n              fill = _updater$getColorStyl.fill,\n              stroke = _updater$getColorStyl.stroke;\n            if (fill) {\n              colorStyles.fill = fill;\n            }\n            if (stroke) {\n              colorStyles.stroke = stroke;\n            }\n          }\n          if (updater.getTransformValues) {\n            var updaterTransform = updater.getTransformValues(particle);\n            for (var key in updaterTransform) {\n              setTransformValue(transform, updaterTransform, key);\n            }\n          }\n          updater.beforeDraw && updater.beforeDraw(particle);\n        }\n      } catch (err) {\n        _iterator2.e(err);\n      } finally {\n        _iterator2.f();\n      }\n    };\n    this._applyResizePlugins = function () {\n      var _iterator3 = _createForOfIteratorHelper(_this._resizePlugins),\n        _step3;\n      try {\n        for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n          var plugin = _step3.value;\n          plugin.resize && plugin.resize();\n        }\n      } catch (err) {\n        _iterator3.e(err);\n      } finally {\n        _iterator3.f();\n      }\n    };\n    this._getPluginParticleColors = function (particle) {\n      var fColor, sColor;\n      var _iterator4 = _createForOfIteratorHelper(_this._colorPlugins),\n        _step4;\n      try {\n        for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {\n          var plugin = _step4.value;\n          if (!fColor && plugin.particleFillColor) {\n            fColor = rangeColorToHsl(plugin.particleFillColor(particle));\n          }\n          if (!sColor && plugin.particleStrokeColor) {\n            sColor = rangeColorToHsl(plugin.particleStrokeColor(particle));\n          }\n          if (fColor && sColor) {\n            break;\n          }\n        }\n      } catch (err) {\n        _iterator4.e(err);\n      } finally {\n        _iterator4.f();\n      }\n      return [fColor, sColor];\n    };\n    this._initCover = function () {\n      var options = _this.container.actualOptions,\n        cover = options.backgroundMask.cover,\n        color = cover.color,\n        coverRgb = rangeColorToRgb(color);\n      if (coverRgb) {\n        var coverColor = _objectSpread(_objectSpread({}, coverRgb), {}, {\n          a: cover.opacity\n        });\n        _this._coverColorStyle = getStyleFromRgb(coverColor, coverColor.a);\n      }\n    };\n    this._initStyle = function () {\n      var element = _this.element,\n        options = _this.container.actualOptions;\n      if (!element) {\n        return;\n      }\n      if (_this._fullScreen) {\n        _this._originalStyle = deepExtend({}, element.style);\n        _this._setFullScreenStyle();\n      } else {\n        _this._resetOriginalStyle();\n      }\n      for (var key in options.style) {\n        if (!key || !options.style) {\n          continue;\n        }\n        var value = options.style[key];\n        if (!value) {\n          continue;\n        }\n        element.style.setProperty(key, value, \"important\");\n      }\n    };\n    this._initTrail = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n      var options, trail, trailFill, fillColor, _trail;\n      return _regeneratorRuntime().wrap(function _callee$(_context) {\n        while (1) switch (_context.prev = _context.next) {\n          case 0:\n            options = _this.container.actualOptions, trail = options.particles.move.trail, trailFill = trail.fill;\n            if (trail.enable) {\n              _context.next = 3;\n              break;\n            }\n            return _context.abrupt(\"return\");\n          case 3:\n            if (!trailFill.color) {\n              _context.next = 11;\n              break;\n            }\n            fillColor = rangeColorToRgb(trailFill.color);\n            if (fillColor) {\n              _context.next = 7;\n              break;\n            }\n            return _context.abrupt(\"return\");\n          case 7:\n            _trail = options.particles.move.trail;\n            _this._trailFill = {\n              color: _objectSpread({}, fillColor),\n              opacity: 1 / _trail.length\n            };\n            _context.next = 13;\n            break;\n          case 11:\n            _context.next = 13;\n            return new Promise(function (resolve, reject) {\n              if (!trailFill.image) {\n                return;\n              }\n              var img = document.createElement(\"img\");\n              img.addEventListener(\"load\", function () {\n                _this._trailFill = {\n                  image: img,\n                  opacity: 1 / trail.length\n                };\n                resolve();\n              });\n              img.addEventListener(\"error\", function (evt) {\n                reject(evt.error);\n              });\n              img.src = trailFill.image;\n            });\n          case 13:\n          case \"end\":\n            return _context.stop();\n        }\n      }, _callee);\n    }));\n    this._paintBase = function (baseColor) {\n      _this.draw(function (ctx) {\n        return paintBase(ctx, _this.size, baseColor);\n      });\n    };\n    this._paintImage = function (image, opacity) {\n      _this.draw(function (ctx) {\n        return paintImage(ctx, _this.size, image, opacity);\n      });\n    };\n    this._repairStyle = function () {\n      var element = _this.element;\n      if (!element) {\n        return;\n      }\n      _this._safeMutationObserver(function (observer) {\n        return observer.disconnect();\n      });\n      _this._initStyle();\n      _this.initBackground();\n      _this._safeMutationObserver(function (observer) {\n        return observer.observe(element, {\n          attributes: true\n        });\n      });\n    };\n    this._resetOriginalStyle = function () {\n      var element = _this.element,\n        originalStyle = _this._originalStyle;\n      if (!(element && originalStyle)) {\n        return;\n      }\n      var style = element.style;\n      style.position = originalStyle.position;\n      style.zIndex = originalStyle.zIndex;\n      style.top = originalStyle.top;\n      style.left = originalStyle.left;\n      style.width = originalStyle.width;\n      style.height = originalStyle.height;\n    };\n    this._safeMutationObserver = function (callback) {\n      if (!_this._mutationObserver) {\n        return;\n      }\n      callback(_this._mutationObserver);\n    };\n    this._setFullScreenStyle = function () {\n      var element = _this.element;\n      if (!element) {\n        return;\n      }\n      var priority = \"important\",\n        style = element.style;\n      style.setProperty(\"position\", \"fixed\", priority);\n      style.setProperty(\"z-index\", _this.container.actualOptions.fullScreen.zIndex.toString(10), priority);\n      style.setProperty(\"top\", \"0\", priority);\n      style.setProperty(\"left\", \"0\", priority);\n      style.setProperty(\"width\", \"100%\", priority);\n      style.setProperty(\"height\", \"100%\", priority);\n    };\n    this.size = {\n      height: 0,\n      width: 0\n    };\n    this._context = null;\n    this._generated = false;\n    this._preDrawUpdaters = [];\n    this._postDrawUpdaters = [];\n    this._resizePlugins = [];\n    this._colorPlugins = [];\n    this._mutationObserver = !isSsr() && typeof MutationObserver !== \"undefined\" ? new MutationObserver(function (records) {\n      var _iterator5 = _createForOfIteratorHelper(records),\n        _step5;\n      try {\n        for (_iterator5.s(); !(_step5 = _iterator5.n()).done;) {\n          var record = _step5.value;\n          if (record.type === \"attributes\" && record.attributeName === \"style\") {\n            _this._repairStyle();\n          }\n        }\n      } catch (err) {\n        _iterator5.e(err);\n      } finally {\n        _iterator5.f();\n      }\n    }) : undefined;\n  }\n  _createClass(Canvas, [{\n    key: \"_fullScreen\",\n    get: function get() {\n      return this.container.actualOptions.fullScreen.enable;\n    }\n  }, {\n    key: \"clear\",\n    value: function clear() {\n      var _this2 = this;\n      var options = this.container.actualOptions,\n        trail = options.particles.move.trail,\n        trailFill = this._trailFill;\n      if (options.backgroundMask.enable) {\n        this.paint();\n      } else if (trail.enable && trail.length > 0 && trailFill) {\n        if (trailFill.color) {\n          this._paintBase(getStyleFromRgb(trailFill.color, trailFill.opacity));\n        } else if (trailFill.image) {\n          this._paintImage(trailFill.image, trailFill.opacity);\n        }\n      } else {\n        this.draw(function (ctx) {\n          _clear(ctx, _this2.size);\n        });\n      }\n    }\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      this._safeMutationObserver(function (obs) {\n        return obs.disconnect();\n      });\n      if (this._generated) {\n        var element = this.element;\n        element && element.remove();\n      } else {\n        this._resetOriginalStyle();\n      }\n      this.stop();\n      this._preDrawUpdaters = [];\n      this._postDrawUpdaters = [];\n      this._resizePlugins = [];\n      this._colorPlugins = [];\n    }\n  }, {\n    key: \"draw\",\n    value: function draw(cb) {\n      var ctx = this._context;\n      if (!ctx) {\n        return;\n      }\n      return cb(ctx);\n    }\n  }, {\n    key: \"drawParticle\",\n    value: function drawParticle(particle, delta) {\n      var _particle$getStrokeCo,\n        _this3 = this;\n      if (particle.spawning || particle.destroyed) {\n        return;\n      }\n      var radius = particle.getRadius();\n      if (radius <= 0) {\n        return;\n      }\n      var pfColor = particle.getFillColor(),\n        psColor = (_particle$getStrokeCo = particle.getStrokeColor()) !== null && _particle$getStrokeCo !== void 0 ? _particle$getStrokeCo : pfColor;\n      var _this$_getPluginParti = this._getPluginParticleColors(particle),\n        _this$_getPluginParti2 = _slicedToArray(_this$_getPluginParti, 2),\n        fColor = _this$_getPluginParti2[0],\n        sColor = _this$_getPluginParti2[1];\n      if (!fColor) {\n        fColor = pfColor;\n      }\n      if (!sColor) {\n        sColor = psColor;\n      }\n      if (!fColor && !sColor) {\n        return;\n      }\n      this.draw(function (ctx) {\n        var _ref2, _particle$bubble$opac, _particle$opacity, _particle$strokeOpaci;\n        var container = _this3.container,\n          options = container.actualOptions,\n          zIndexOptions = particle.options.zIndex,\n          zOpacityFactor = Math.pow(1 - particle.zIndexFactor, zIndexOptions.opacityRate),\n          opacity = (_ref2 = (_particle$bubble$opac = particle.bubble.opacity) !== null && _particle$bubble$opac !== void 0 ? _particle$bubble$opac : (_particle$opacity = particle.opacity) === null || _particle$opacity === void 0 ? void 0 : _particle$opacity.value) !== null && _ref2 !== void 0 ? _ref2 : 1,\n          strokeOpacity = (_particle$strokeOpaci = particle.strokeOpacity) !== null && _particle$strokeOpaci !== void 0 ? _particle$strokeOpaci : opacity,\n          zOpacity = opacity * zOpacityFactor,\n          zStrokeOpacity = strokeOpacity * zOpacityFactor,\n          transform = {},\n          colorStyles = {\n            fill: fColor ? getStyleFromHsl(fColor, zOpacity) : undefined\n          };\n        colorStyles.stroke = sColor ? getStyleFromHsl(sColor, zStrokeOpacity) : colorStyles.fill;\n        _this3._applyPreDrawUpdaters(ctx, particle, radius, zOpacity, colorStyles, transform);\n        _drawParticle({\n          container: container,\n          context: ctx,\n          particle: particle,\n          delta: delta,\n          colorStyles: colorStyles,\n          backgroundMask: options.backgroundMask.enable,\n          composite: options.backgroundMask.composite,\n          radius: radius * Math.pow(1 - particle.zIndexFactor, zIndexOptions.sizeRate),\n          opacity: zOpacity,\n          shadow: particle.options.shadow,\n          transform: transform\n        });\n        _this3._applyPostDrawUpdaters(particle);\n      });\n    }\n  }, {\n    key: \"drawParticlePlugin\",\n    value: function drawParticlePlugin(plugin, particle, delta) {\n      this.draw(function (ctx) {\n        return _drawParticlePlugin(ctx, plugin, particle, delta);\n      });\n    }\n  }, {\n    key: \"drawPlugin\",\n    value: function drawPlugin(plugin, delta) {\n      this.draw(function (ctx) {\n        return _drawPlugin(ctx, plugin, delta);\n      });\n    }\n  }, {\n    key: \"init\",\n    value: function () {\n      var _init = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n        var _this4 = this;\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) switch (_context2.prev = _context2.next) {\n            case 0:\n              this.resize();\n              this._initStyle();\n              this._initCover();\n              _context2.prev = 3;\n              _context2.next = 6;\n              return this._initTrail();\n            case 6:\n              _context2.next = 11;\n              break;\n            case 8:\n              _context2.prev = 8;\n              _context2.t0 = _context2[\"catch\"](3);\n              console.error(_context2.t0);\n            case 11:\n              this.initBackground();\n              this._safeMutationObserver(function (obs) {\n                if (!_this4.element) {\n                  return;\n                }\n                obs.observe(_this4.element, {\n                  attributes: true\n                });\n              });\n              this.initUpdaters();\n              this.initPlugins();\n              this.paint();\n            case 16:\n            case \"end\":\n              return _context2.stop();\n          }\n        }, _callee2, this, [[3, 8]]);\n      }));\n      function init() {\n        return _init.apply(this, arguments);\n      }\n      return init;\n    }()\n  }, {\n    key: \"initBackground\",\n    value: function initBackground() {\n      var options = this.container.actualOptions,\n        background = options.background,\n        element = this.element;\n      if (!element) {\n        return;\n      }\n      var elementStyle = element.style;\n      if (!elementStyle) {\n        return;\n      }\n      if (background.color) {\n        var color = rangeColorToRgb(background.color);\n        elementStyle.backgroundColor = color ? getStyleFromRgb(color, background.opacity) : \"\";\n      } else {\n        elementStyle.backgroundColor = \"\";\n      }\n      elementStyle.backgroundImage = background.image || \"\";\n      elementStyle.backgroundPosition = background.position || \"\";\n      elementStyle.backgroundRepeat = background.repeat || \"\";\n      elementStyle.backgroundSize = background.size || \"\";\n    }\n  }, {\n    key: \"initPlugins\",\n    value: function initPlugins() {\n      this._resizePlugins = [];\n      var _iterator6 = _createForOfIteratorHelper(this.container.plugins),\n        _step6;\n      try {\n        for (_iterator6.s(); !(_step6 = _iterator6.n()).done;) {\n          var _step6$value = _slicedToArray(_step6.value, 2),\n            plugin = _step6$value[1];\n          if (plugin.resize) {\n            this._resizePlugins.push(plugin);\n          }\n          if (plugin.particleFillColor || plugin.particleStrokeColor) {\n            this._colorPlugins.push(plugin);\n          }\n        }\n      } catch (err) {\n        _iterator6.e(err);\n      } finally {\n        _iterator6.f();\n      }\n    }\n  }, {\n    key: \"initUpdaters\",\n    value: function initUpdaters() {\n      this._preDrawUpdaters = [];\n      this._postDrawUpdaters = [];\n      var _iterator7 = _createForOfIteratorHelper(this.container.particles.updaters),\n        _step7;\n      try {\n        for (_iterator7.s(); !(_step7 = _iterator7.n()).done;) {\n          var updater = _step7.value;\n          if (updater.afterDraw) {\n            this._postDrawUpdaters.push(updater);\n          }\n          if (updater.getColorStyles || updater.getTransformValues || updater.beforeDraw) {\n            this._preDrawUpdaters.push(updater);\n          }\n        }\n      } catch (err) {\n        _iterator7.e(err);\n      } finally {\n        _iterator7.f();\n      }\n    }\n  }, {\n    key: \"loadCanvas\",\n    value: function loadCanvas(canvas) {\n      var _this5 = this;\n      if (this._generated && this.element) {\n        this.element.remove();\n      }\n      this._generated = canvas.dataset && generatedAttribute in canvas.dataset ? canvas.dataset[generatedAttribute] === \"true\" : this._generated;\n      this.element = canvas;\n      this.element.ariaHidden = \"true\";\n      this._originalStyle = deepExtend({}, this.element.style);\n      this.size.height = canvas.offsetHeight;\n      this.size.width = canvas.offsetWidth;\n      this._context = this.element.getContext(\"2d\");\n      this._safeMutationObserver(function (obs) {\n        if (!_this5.element) {\n          return;\n        }\n        obs.observe(_this5.element, {\n          attributes: true\n        });\n      });\n      this.container.retina.init();\n      this.initBackground();\n    }\n  }, {\n    key: \"paint\",\n    value: function paint() {\n      var _this6 = this;\n      var options = this.container.actualOptions;\n      this.draw(function (ctx) {\n        if (options.backgroundMask.enable && options.backgroundMask.cover) {\n          _clear(ctx, _this6.size);\n          _this6._paintBase(_this6._coverColorStyle);\n        } else {\n          _this6._paintBase();\n        }\n      });\n    }\n  }, {\n    key: \"resize\",\n    value: function resize() {\n      if (!this.element) {\n        return false;\n      }\n      var container = this.container,\n        pxRatio = container.retina.pixelRatio,\n        size = container.canvas.size,\n        newSize = {\n          width: this.element.offsetWidth * pxRatio,\n          height: this.element.offsetHeight * pxRatio\n        };\n      if (newSize.height === size.height && newSize.width === size.width && newSize.height === this.element.height && newSize.width === this.element.width) {\n        return false;\n      }\n      var oldSize = _objectSpread({}, size);\n      this.element.width = size.width = this.element.offsetWidth * pxRatio;\n      this.element.height = size.height = this.element.offsetHeight * pxRatio;\n      if (this.container.started) {\n        this.resizeFactor = {\n          width: size.width / oldSize.width,\n          height: size.height / oldSize.height\n        };\n      }\n      return true;\n    }\n  }, {\n    key: \"stop\",\n    value: function stop() {\n      var _this7 = this;\n      this.draw(function (ctx) {\n        return _clear(ctx, _this7.size);\n      });\n    }\n  }, {\n    key: \"windowResize\",\n    value: function () {\n      var _windowResize = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3() {\n        var container, needsRefresh;\n        return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n          while (1) switch (_context3.prev = _context3.next) {\n            case 0:\n              if (!(!this.element || !this.resize())) {\n                _context3.next = 2;\n                break;\n              }\n              return _context3.abrupt(\"return\");\n            case 2:\n              container = this.container, needsRefresh = container.updateActualOptions();\n              container.particles.setDensity();\n              this._applyResizePlugins();\n              if (!needsRefresh) {\n                _context3.next = 8;\n                break;\n              }\n              _context3.next = 8;\n              return container.refresh();\n            case 8:\n            case \"end\":\n              return _context3.stop();\n          }\n        }, _callee3, this);\n      }));\n      function windowResize() {\n        return _windowResize.apply(this, arguments);\n      }\n      return windowResize;\n    }()\n  }]);\n  return Canvas;\n}();","map":{"version":3,"names":["clear","drawParticle","drawParticlePlugin","drawPlugin","paintBase","paintImage","deepExtend","isSsr","getStyleFromHsl","getStyleFromRgb","rangeColorToHsl","rangeColorToRgb","generatedAttribute","setTransformValue","factor","newFactor","key","newValue","undefined","_factor$key","Canvas","container","_this","_classCallCheck","_applyPostDrawUpdaters","particle","_iterator","_createForOfIteratorHelper","_postDrawUpdaters","_step","s","n","done","updater","value","afterDraw","err","e","f","_applyPreDrawUpdaters","ctx","radius","zOpacity","colorStyles","transform","_iterator2","_preDrawUpdaters","_step2","getColorStyles","_updater$getColorStyl","fill","stroke","getTransformValues","updaterTransform","beforeDraw","_applyResizePlugins","_iterator3","_resizePlugins","_step3","plugin","resize","_getPluginParticleColors","fColor","sColor","_iterator4","_colorPlugins","_step4","particleFillColor","particleStrokeColor","_initCover","options","actualOptions","cover","backgroundMask","color","coverRgb","coverColor","_objectSpread","a","opacity","_coverColorStyle","_initStyle","element","_fullScreen","_originalStyle","style","_setFullScreenStyle","_resetOriginalStyle","setProperty","_initTrail","_asyncToGenerator","_regeneratorRuntime","mark","_callee","trail","trailFill","fillColor","_trail","wrap","_callee$","_context","prev","next","particles","move","enable","abrupt","_trailFill","length","Promise","resolve","reject","image","img","document","createElement","addEventListener","evt","error","src","stop","_paintBase","baseColor","draw","size","_paintImage","_repairStyle","_safeMutationObserver","observer","disconnect","initBackground","observe","attributes","originalStyle","position","zIndex","top","left","width","height","callback","_mutationObserver","priority","fullScreen","toString","_generated","MutationObserver","records","_iterator5","_step5","record","type","attributeName","_createClass","get","_this2","paint","destroy","obs","remove","cb","delta","_particle$getStrokeCo","_this3","spawning","destroyed","getRadius","pfColor","getFillColor","psColor","getStrokeColor","_this$_getPluginParti","_this$_getPluginParti2","_slicedToArray","_ref2","_particle$bubble$opac","_particle$opacity","_particle$strokeOpaci","zIndexOptions","zOpacityFactor","Math","pow","zIndexFactor","opacityRate","bubble","strokeOpacity","zStrokeOpacity","context","composite","sizeRate","shadow","_init","_callee2","_this4","_callee2$","_context2","t0","console","initUpdaters","initPlugins","init","apply","arguments","background","elementStyle","backgroundColor","backgroundImage","backgroundPosition","backgroundRepeat","repeat","backgroundSize","_iterator6","plugins","_step6","_step6$value","push","_iterator7","updaters","_step7","loadCanvas","canvas","_this5","dataset","ariaHidden","offsetHeight","offsetWidth","getContext","retina","_this6","pxRatio","pixelRatio","newSize","oldSize","started","resizeFactor","_this7","_windowResize","_callee3","needsRefresh","_callee3$","_context3","updateActualOptions","setDensity","refresh","windowResize"],"sources":["C:/Users/HP/3D Objects/portfolio/my/node_modules/tsparticles-engine/esm/Core/Canvas.js"],"sourcesContent":["import { clear, drawParticle, drawParticlePlugin, drawPlugin, paintBase, paintImage } from \"../Utils/CanvasUtils\";\nimport { deepExtend, isSsr } from \"../Utils/Utils\";\nimport { getStyleFromHsl, getStyleFromRgb, rangeColorToHsl, rangeColorToRgb } from \"../Utils/ColorUtils\";\nimport { generatedAttribute } from \"./Utils/Constants\";\nfunction setTransformValue(factor, newFactor, key) {\n    const newValue = newFactor[key];\n    if (newValue !== undefined) {\n        factor[key] = (factor[key] ?? 1) * newValue;\n    }\n}\nexport class Canvas {\n    constructor(container) {\n        this.container = container;\n        this._applyPostDrawUpdaters = (particle) => {\n            for (const updater of this._postDrawUpdaters) {\n                updater.afterDraw && updater.afterDraw(particle);\n            }\n        };\n        this._applyPreDrawUpdaters = (ctx, particle, radius, zOpacity, colorStyles, transform) => {\n            for (const updater of this._preDrawUpdaters) {\n                if (updater.getColorStyles) {\n                    const { fill, stroke } = updater.getColorStyles(particle, ctx, radius, zOpacity);\n                    if (fill) {\n                        colorStyles.fill = fill;\n                    }\n                    if (stroke) {\n                        colorStyles.stroke = stroke;\n                    }\n                }\n                if (updater.getTransformValues) {\n                    const updaterTransform = updater.getTransformValues(particle);\n                    for (const key in updaterTransform) {\n                        setTransformValue(transform, updaterTransform, key);\n                    }\n                }\n                updater.beforeDraw && updater.beforeDraw(particle);\n            }\n        };\n        this._applyResizePlugins = () => {\n            for (const plugin of this._resizePlugins) {\n                plugin.resize && plugin.resize();\n            }\n        };\n        this._getPluginParticleColors = (particle) => {\n            let fColor, sColor;\n            for (const plugin of this._colorPlugins) {\n                if (!fColor && plugin.particleFillColor) {\n                    fColor = rangeColorToHsl(plugin.particleFillColor(particle));\n                }\n                if (!sColor && plugin.particleStrokeColor) {\n                    sColor = rangeColorToHsl(plugin.particleStrokeColor(particle));\n                }\n                if (fColor && sColor) {\n                    break;\n                }\n            }\n            return [fColor, sColor];\n        };\n        this._initCover = () => {\n            const options = this.container.actualOptions, cover = options.backgroundMask.cover, color = cover.color, coverRgb = rangeColorToRgb(color);\n            if (coverRgb) {\n                const coverColor = {\n                    ...coverRgb,\n                    a: cover.opacity,\n                };\n                this._coverColorStyle = getStyleFromRgb(coverColor, coverColor.a);\n            }\n        };\n        this._initStyle = () => {\n            const element = this.element, options = this.container.actualOptions;\n            if (!element) {\n                return;\n            }\n            if (this._fullScreen) {\n                this._originalStyle = deepExtend({}, element.style);\n                this._setFullScreenStyle();\n            }\n            else {\n                this._resetOriginalStyle();\n            }\n            for (const key in options.style) {\n                if (!key || !options.style) {\n                    continue;\n                }\n                const value = options.style[key];\n                if (!value) {\n                    continue;\n                }\n                element.style.setProperty(key, value, \"important\");\n            }\n        };\n        this._initTrail = async () => {\n            const options = this.container.actualOptions, trail = options.particles.move.trail, trailFill = trail.fill;\n            if (!trail.enable) {\n                return;\n            }\n            if (trailFill.color) {\n                const fillColor = rangeColorToRgb(trailFill.color);\n                if (!fillColor) {\n                    return;\n                }\n                const trail = options.particles.move.trail;\n                this._trailFill = {\n                    color: {\n                        ...fillColor,\n                    },\n                    opacity: 1 / trail.length,\n                };\n            }\n            else {\n                await new Promise((resolve, reject) => {\n                    if (!trailFill.image) {\n                        return;\n                    }\n                    const img = document.createElement(\"img\");\n                    img.addEventListener(\"load\", () => {\n                        this._trailFill = {\n                            image: img,\n                            opacity: 1 / trail.length,\n                        };\n                        resolve();\n                    });\n                    img.addEventListener(\"error\", (evt) => {\n                        reject(evt.error);\n                    });\n                    img.src = trailFill.image;\n                });\n            }\n        };\n        this._paintBase = (baseColor) => {\n            this.draw((ctx) => paintBase(ctx, this.size, baseColor));\n        };\n        this._paintImage = (image, opacity) => {\n            this.draw((ctx) => paintImage(ctx, this.size, image, opacity));\n        };\n        this._repairStyle = () => {\n            const element = this.element;\n            if (!element) {\n                return;\n            }\n            this._safeMutationObserver((observer) => observer.disconnect());\n            this._initStyle();\n            this.initBackground();\n            this._safeMutationObserver((observer) => observer.observe(element, { attributes: true }));\n        };\n        this._resetOriginalStyle = () => {\n            const element = this.element, originalStyle = this._originalStyle;\n            if (!(element && originalStyle)) {\n                return;\n            }\n            const style = element.style;\n            style.position = originalStyle.position;\n            style.zIndex = originalStyle.zIndex;\n            style.top = originalStyle.top;\n            style.left = originalStyle.left;\n            style.width = originalStyle.width;\n            style.height = originalStyle.height;\n        };\n        this._safeMutationObserver = (callback) => {\n            if (!this._mutationObserver) {\n                return;\n            }\n            callback(this._mutationObserver);\n        };\n        this._setFullScreenStyle = () => {\n            const element = this.element;\n            if (!element) {\n                return;\n            }\n            const priority = \"important\", style = element.style;\n            style.setProperty(\"position\", \"fixed\", priority);\n            style.setProperty(\"z-index\", this.container.actualOptions.fullScreen.zIndex.toString(10), priority);\n            style.setProperty(\"top\", \"0\", priority);\n            style.setProperty(\"left\", \"0\", priority);\n            style.setProperty(\"width\", \"100%\", priority);\n            style.setProperty(\"height\", \"100%\", priority);\n        };\n        this.size = {\n            height: 0,\n            width: 0,\n        };\n        this._context = null;\n        this._generated = false;\n        this._preDrawUpdaters = [];\n        this._postDrawUpdaters = [];\n        this._resizePlugins = [];\n        this._colorPlugins = [];\n        this._mutationObserver =\n            !isSsr() && typeof MutationObserver !== \"undefined\"\n                ? new MutationObserver((records) => {\n                    for (const record of records) {\n                        if (record.type === \"attributes\" && record.attributeName === \"style\") {\n                            this._repairStyle();\n                        }\n                    }\n                })\n                : undefined;\n    }\n    get _fullScreen() {\n        return this.container.actualOptions.fullScreen.enable;\n    }\n    clear() {\n        const options = this.container.actualOptions, trail = options.particles.move.trail, trailFill = this._trailFill;\n        if (options.backgroundMask.enable) {\n            this.paint();\n        }\n        else if (trail.enable && trail.length > 0 && trailFill) {\n            if (trailFill.color) {\n                this._paintBase(getStyleFromRgb(trailFill.color, trailFill.opacity));\n            }\n            else if (trailFill.image) {\n                this._paintImage(trailFill.image, trailFill.opacity);\n            }\n        }\n        else {\n            this.draw((ctx) => {\n                clear(ctx, this.size);\n            });\n        }\n    }\n    destroy() {\n        this._safeMutationObserver((obs) => obs.disconnect());\n        if (this._generated) {\n            const element = this.element;\n            element && element.remove();\n        }\n        else {\n            this._resetOriginalStyle();\n        }\n        this.stop();\n        this._preDrawUpdaters = [];\n        this._postDrawUpdaters = [];\n        this._resizePlugins = [];\n        this._colorPlugins = [];\n    }\n    draw(cb) {\n        const ctx = this._context;\n        if (!ctx) {\n            return;\n        }\n        return cb(ctx);\n    }\n    drawParticle(particle, delta) {\n        if (particle.spawning || particle.destroyed) {\n            return;\n        }\n        const radius = particle.getRadius();\n        if (radius <= 0) {\n            return;\n        }\n        const pfColor = particle.getFillColor(), psColor = particle.getStrokeColor() ?? pfColor;\n        let [fColor, sColor] = this._getPluginParticleColors(particle);\n        if (!fColor) {\n            fColor = pfColor;\n        }\n        if (!sColor) {\n            sColor = psColor;\n        }\n        if (!fColor && !sColor) {\n            return;\n        }\n        this.draw((ctx) => {\n            const container = this.container, options = container.actualOptions, zIndexOptions = particle.options.zIndex, zOpacityFactor = (1 - particle.zIndexFactor) ** zIndexOptions.opacityRate, opacity = particle.bubble.opacity ?? particle.opacity?.value ?? 1, strokeOpacity = particle.strokeOpacity ?? opacity, zOpacity = opacity * zOpacityFactor, zStrokeOpacity = strokeOpacity * zOpacityFactor, transform = {}, colorStyles = {\n                fill: fColor ? getStyleFromHsl(fColor, zOpacity) : undefined,\n            };\n            colorStyles.stroke = sColor ? getStyleFromHsl(sColor, zStrokeOpacity) : colorStyles.fill;\n            this._applyPreDrawUpdaters(ctx, particle, radius, zOpacity, colorStyles, transform);\n            drawParticle({\n                container,\n                context: ctx,\n                particle,\n                delta,\n                colorStyles,\n                backgroundMask: options.backgroundMask.enable,\n                composite: options.backgroundMask.composite,\n                radius: radius * (1 - particle.zIndexFactor) ** zIndexOptions.sizeRate,\n                opacity: zOpacity,\n                shadow: particle.options.shadow,\n                transform,\n            });\n            this._applyPostDrawUpdaters(particle);\n        });\n    }\n    drawParticlePlugin(plugin, particle, delta) {\n        this.draw((ctx) => drawParticlePlugin(ctx, plugin, particle, delta));\n    }\n    drawPlugin(plugin, delta) {\n        this.draw((ctx) => drawPlugin(ctx, plugin, delta));\n    }\n    async init() {\n        this.resize();\n        this._initStyle();\n        this._initCover();\n        try {\n            await this._initTrail();\n        }\n        catch (e) {\n            console.error(e);\n        }\n        this.initBackground();\n        this._safeMutationObserver((obs) => {\n            if (!this.element) {\n                return;\n            }\n            obs.observe(this.element, { attributes: true });\n        });\n        this.initUpdaters();\n        this.initPlugins();\n        this.paint();\n    }\n    initBackground() {\n        const options = this.container.actualOptions, background = options.background, element = this.element;\n        if (!element) {\n            return;\n        }\n        const elementStyle = element.style;\n        if (!elementStyle) {\n            return;\n        }\n        if (background.color) {\n            const color = rangeColorToRgb(background.color);\n            elementStyle.backgroundColor = color ? getStyleFromRgb(color, background.opacity) : \"\";\n        }\n        else {\n            elementStyle.backgroundColor = \"\";\n        }\n        elementStyle.backgroundImage = background.image || \"\";\n        elementStyle.backgroundPosition = background.position || \"\";\n        elementStyle.backgroundRepeat = background.repeat || \"\";\n        elementStyle.backgroundSize = background.size || \"\";\n    }\n    initPlugins() {\n        this._resizePlugins = [];\n        for (const [, plugin] of this.container.plugins) {\n            if (plugin.resize) {\n                this._resizePlugins.push(plugin);\n            }\n            if (plugin.particleFillColor || plugin.particleStrokeColor) {\n                this._colorPlugins.push(plugin);\n            }\n        }\n    }\n    initUpdaters() {\n        this._preDrawUpdaters = [];\n        this._postDrawUpdaters = [];\n        for (const updater of this.container.particles.updaters) {\n            if (updater.afterDraw) {\n                this._postDrawUpdaters.push(updater);\n            }\n            if (updater.getColorStyles || updater.getTransformValues || updater.beforeDraw) {\n                this._preDrawUpdaters.push(updater);\n            }\n        }\n    }\n    loadCanvas(canvas) {\n        if (this._generated && this.element) {\n            this.element.remove();\n        }\n        this._generated =\n            canvas.dataset && generatedAttribute in canvas.dataset\n                ? canvas.dataset[generatedAttribute] === \"true\"\n                : this._generated;\n        this.element = canvas;\n        this.element.ariaHidden = \"true\";\n        this._originalStyle = deepExtend({}, this.element.style);\n        this.size.height = canvas.offsetHeight;\n        this.size.width = canvas.offsetWidth;\n        this._context = this.element.getContext(\"2d\");\n        this._safeMutationObserver((obs) => {\n            if (!this.element) {\n                return;\n            }\n            obs.observe(this.element, { attributes: true });\n        });\n        this.container.retina.init();\n        this.initBackground();\n    }\n    paint() {\n        const options = this.container.actualOptions;\n        this.draw((ctx) => {\n            if (options.backgroundMask.enable && options.backgroundMask.cover) {\n                clear(ctx, this.size);\n                this._paintBase(this._coverColorStyle);\n            }\n            else {\n                this._paintBase();\n            }\n        });\n    }\n    resize() {\n        if (!this.element) {\n            return false;\n        }\n        const container = this.container, pxRatio = container.retina.pixelRatio, size = container.canvas.size, newSize = {\n            width: this.element.offsetWidth * pxRatio,\n            height: this.element.offsetHeight * pxRatio,\n        };\n        if (newSize.height === size.height &&\n            newSize.width === size.width &&\n            newSize.height === this.element.height &&\n            newSize.width === this.element.width) {\n            return false;\n        }\n        const oldSize = { ...size };\n        this.element.width = size.width = this.element.offsetWidth * pxRatio;\n        this.element.height = size.height = this.element.offsetHeight * pxRatio;\n        if (this.container.started) {\n            this.resizeFactor = {\n                width: size.width / oldSize.width,\n                height: size.height / oldSize.height,\n            };\n        }\n        return true;\n    }\n    stop() {\n        this.draw((ctx) => clear(ctx, this.size));\n    }\n    async windowResize() {\n        if (!this.element || !this.resize()) {\n            return;\n        }\n        const container = this.container, needsRefresh = container.updateActualOptions();\n        container.particles.setDensity();\n        this._applyResizePlugins();\n        if (needsRefresh) {\n            await container.refresh();\n        }\n    }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}